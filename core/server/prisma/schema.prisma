generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DB_URL")
  shadowDatabaseUrl = env("SHADOW_DB_URL")
}

model User {
  id                      String                      @id @default(uuid())
  name                    String
  isAdmin                 Boolean                     @map("is_admin")
  tabs                    Tab[]
  gglSmarthomeIntegration GoogleSmartHomeIntegration?

  @@map("users")
}

model Tab {
  id      Int      @id @default(autoincrement())
  name    String
  users   User[]
  widgets Widget[]

  @@map("tabs")
}

model Widget {
  id         Int               @id @default(autoincrement())
  customId   String            @map("custom_id")
  tabId      Int               @map("tab_id")
  tab        Tab               @relation(fields: [tabId], references: [id])
  deviceId   Int               @map("device_id")
  device     Device            @relation(fields: [deviceId], references: [id])
  type       String
  x          Int
  y          Int
  width      Int
  height     Int
  properties WidgetProperties?

  @@unique([x, y, tabId]) // no widgets can have the same coordinates on the same tab
  @@map("widgets")
}

model WidgetProperties {
  id         Int      @id @default(autoincrement())
  widgetId   Int      @map("widget_id")
  widget     Widget   @relation(fields: [widgetId], references: [id], onDelete: Cascade)
  title      String?
  color      String?
  text       String?
  onText     String?  @map("on_text")
  offText    String?  @map("off_text")
  isSwitch   Boolean? @map("is_switch")
  isVertical Boolean? @map("is_vertical")
  step       Float?
  min        Float?
  max        Float?

  @@unique([widgetId])
  @@map("widget_properties")
}

model Device {
  id                     Int                     @id @default(autoincrement())
  token                  String                  @default(uuid())
  name                   String
  widgets                Widget[]
  googlehomeTraitTargets GooglehomeTraitTarget[]

  @@unique([token])
  @@map("devices")
}

// TODO: remove in favor of redis
model Value {
  deviceId Int    @map("device_id")
  customId String @map("custom_id")
  value    String

  @@id([deviceId, customId])
  @@map("values")
}

model GoogleSmartHomeIntegration {
  id                 Int                @id @default(autoincrement())
  userId             String             @unique @map("user_id")
  user               User               @relation(fields: [userId], references: [id], onDelete: Cascade)
  code               String?            @unique
  codeExpires        DateTime?          @map("code_expires")
  accessToken        String?            @unique @map("access_token")
  refreshToken       String?            @unique @map("refresh_token")
  accessTokenExpires DateTime?          @map("access_token_expires")
  devices            GooglehomeDevice[]

  @@map("ggl_smarthome_integrations")
}

model GooglehomeDevice {
  id            Int                        @id @default(autoincrement())
  integrationId Int                        @map("integration_id")
  integration   GoogleSmartHomeIntegration @relation(fields: [integrationId], references: [id], onDelete: Cascade)
  type          String
  name          String
  traits        GooglehomeDeviceTrait[]

  @@map("ggl_smarthome_device")
}

model GooglehomeDeviceTrait {
  id             Int                     @id @default(autoincrement())
  googleDeviceId Int                     @map("google_device_id")
  googleDevice   GooglehomeDevice        @relation(fields: [googleDeviceId], references: [id], onDelete: Cascade)
  name           String
  targets        GooglehomeTraitTarget[]

  @@map("ggl_smarthome_device_trait")
}

model GooglehomeTraitTarget {
  id       Int                   @id @default(autoincrement())
  name     String
  deviceId Int                   @map("device_id")
  device   Device                @relation(fields: [deviceId], references: [id])
  customId String                @map("custom_id")
  traitId  Int
  trait    GooglehomeDeviceTrait @relation(fields: [traitId], references: [id], onDelete: Cascade)

  @@map("ggl_smarthome_trait_target")
}
